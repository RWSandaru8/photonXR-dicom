root@DynamicCalendarVM1:/var/lib/orthanc/nginx# cat default.conf
# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name dentax.globalpearlventures.com;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    http2 on;
    server_name dentax.globalpearlventures.com;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/dentax.globalpearlventures.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dentax.globalpearlventures.com/privkey.pem;

    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";

    # Client settings for large files
    client_max_body_size 0;
    client_body_timeout 300s;
    client_header_timeout 300s;

    # Main location block
    location / {
        # CORS Headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Proxy to Orthanc
        proxy_pass http://orthanc:8042;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Important for large DICOM files
        proxy_max_temp_file_size 0;
        proxy_buffering off;

        # Timeouts
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }
} this is the nginx config and root@DynamicCalendarVM1:/var/lib/orthanc/nginx# cat docker-compose.yml
version: '3.8'

networks:
  orthanc_network:
    driver: bridge

services:
  orthanc:
    image: jodogne/orthanc-plugins:latest
    container_name: orthanc-server
    restart: unless-stopped
    networks:
      - orthanc_network
    volumes:
      # Persistent storage
      - /var/lib/orthanc/storage:/var/lib/orthanc/db
      - /var/lib/orthanc/index:/var/lib/orthanc/index

      # Configuration (HTTP only)
      - /var/lib/orthanc/config/orthanc.json:/etc/orthanc/orthanc.json:ro
    environment:
      - ORTHANC__NAME=MyOrthanc
      - ORTHANC__DICOM_SERVER_ENABLED=true
      - ORTHANC__DICOM_WEB__ENABLE=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8042/system"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  nginx:
    image: nginx:alpine
    container_name: orthanc-nginx
    restart: unless-stopped
    networks:
      - orthanc_network
    ports:
      - "4000:443"  # HTTPS on port 4000
    volumes:
      - /var/lib/orthanc/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /etc/ssl/certs:/etc/ssl/certs:ro
    depends_on:
      - orthanc  is docker-compose.yml and root@DynamicCalendarVM1:/var/lib/orthanc/config# cat orthanc.json
{
  "Name" : "MyOrthanc",

  "StorageDirectory" : "/var/lib/orthanc/db",
  "IndexDirectory" : "/var/lib/orthanc/index",

  "StorageCompression" : false,
  "MaximumStorageSize" : 0,
  "MaximumPatientCount" : 0,
  "MaximumStorageMode" : "Recycle",
  "MaximumStorageCacheSize" : 128,

  "LuaScripts" : [],
  "LuaHeartBeatPeriod" : 0,

  "Plugins" : [ "/usr/share/orthanc/plugins" ],

  "ConcurrentJobs" : 2,

  "JobsEngineThreadsCount" : {
    "ResourceModification": 1
  },

  "DicomWeb" : {
    "Enable" : true,
    "Root": "/dicom-web",
    "EnableWado": true,
    "EnableQido": true,
    "EnableStow": true,
    "AllowPut": true
  },

  "HttpServerEnabled" : true,
  "OrthancExplorerEnabled" : true,
  "HttpPort" : 8042,
  "HttpDescribeErrors" : true,
  "HttpCompressionEnabled" : true,
  "WebDavEnabled" : true,
  "WebDavDeleteAllowed" : false,
  "WebDavUploadAllowed" : true,

  "DicomServerEnabled" : true,
  "DicomAet" : "ORTHANC",
  "DicomCheckCalledAet" : false,
  "DicomPort" : 4242,
  "DefaultEncoding" : "Latin1",
  "AcceptedTransferSyntaxes" : [ "1.2.840.10008.1.*" ],
  "UnknownSopClassAccepted" : false,
  "DicomScpTimeout" : 30,

  "RemoteAccessAllowed" : true,

  "AuthenticationEnabled" : false,

  "DicomTlsEnabled" : false,
  "DicomAlwaysAllowEcho" : true,
  "DicomAlwaysAllowStore" : true,
  "DicomAlwaysAllowFind" : false,
  "DicomAlwaysAllowFindWorklist" : false,
  "DicomAlwaysAllowGet" : false,
  "DicomAlwaysAllowMove" : false,
  "DicomCheckModalityHost" : false,

  "DicomModalities" : {},
  "DicomModalitiesInDatabase" : false,
  "DicomEchoChecksFind" : false,
  "DicomDefaultRetrieveMethod" : "C-MOVE",
  "DicomScuTimeout" : 10,
  "DicomScuPreferredTransferSyntax" : "1.2.840.10008.1.2.1",
  "DicomThreadsCount" : 4,

  "OrthancPeers" : {},
  "OrthancPeersInDatabase" : false,

  "HttpProxy" : "",
  "HttpVerbose" : false,
  "HttpTimeout" : 60,
  "HttpsVerifyPeers" : true,
  "HttpsCACertificates" : "/etc/ssl/certs/ca-certificates.crt",

  "UserMetadata" : {},
  "UserContentType" : {},

  "StableAge" : 60,
  "StrictAetComparison" : false,
  "StoreMD5ForAttachments" : true,
  "LimitFindResults" : 0,
  "LimitFindInstances" : 0,
  "LogExportedResources" : false,
  "KeepAlive" : true,
  "KeepAliveTimeout" : 1,
  "TcpNoDelay" : true,
  "HttpThreadsCount" : 50,
  "StoreDicom" : true,
  "DicomAssociationCloseDelay" : 5,
  "QueryRetrieveSize" : 100,
  "CaseSensitivePN" : false,
  "LoadPrivateDictionary" : true,
  "Dictionary" : {},
  "SynchronousCMove" : true,
  "JobsHistorySize" : 10,
  "SaveJobs" : true,
  "OverwriteInstances" : false,
  "MediaArchiveSize" : 1,
  "StorageAccessOnFind" : "Always",
  "MetricsEnabled" : true,
  "ExecuteLuaEnabled" : false,
  "RestApiWriteToFileSystemEnabled": false,
  "HttpRequestTimeout" : 30,
  "DefaultPrivateCreator" : "",
  "StorageCommitmentReportsSize" : 100,
  "TranscodeDicomProtocol" : true,
  "BuiltinDecoderTranscoderOrder" : "After",
  "IngestTranscodingOfUncompressed" : true,
  "IngestTranscodingOfCompressed" : true,
  "DicomLossyTranscodingQuality" : 90,
  "SyncStorageArea" : true,
  "MallocArenaMax" : 5,
  "DeidentifyLogs" : true,
  "DeidentifyLogsDicomVersion" : "2023b",
  "MaximumPduLength" : 16384,
  "CheckRevisions" : false,
  "SynchronousZipStream" : true,
  "ZipLoaderThreads": 0,
  "Warnings" : {
    "W001_TagsBeingReadFromStorage": true,
    "W002_InconsistentDicomTagsInDb": true,
    "W003_DecoderFailure": true,
    "W004_NoMainDicomTagsSignature": true,
    "W005_RequestingTagFromLowerResourceLevel": true,
    "W006_RequestingTagFromMetaHeader": true,
    "W007_MissingRequestedTagsNotReadFromDisk": true
  },
  "ReadOnly" : false,
  "MaximumConcurrentDcmtkTranscoders" : 0
} orthanc.json
